name: Build-Padavan-NEWIFI3-new

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id

    env:
      REPO_URL: https://github.com/fightroad/Padavan-KVR.git
      REPO_BRANCH: main
      FIRMWARE_PATH: rt-n56u
      CONFIG_TARGET: NEWIFI3
      KERNEL_VERSION: 3.4

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare build environment
        run: |
          mkdir -p .github/scripts

      - name: Create firmware configuration script
        run: |
          cat <<'EOF' > .github/scripts/configure_firmware.sh
          #!/bin/bash
          set -e
          CONFIG_FILE="$1"
          set_config() {
              local KEY=$1
              local VALUE=$2
              if grep -q "^#*$KEY" "$CONFIG_FILE"; then
                  sed -i "s|^#*$KEY=.*|$KEY=$VALUE|" "$CONFIG_FILE"
              else
                  echo "$KEY=$VALUE" >> "$CONFIG_FILE"
              fi
          }
          echo "--- Starting Firmware Configuration ---"
          set_config CONFIG_FIRMWARE_INCLUDE_DNSFORWARDER n
          set_config CONFIG_FIRMWARE_INCLUDE_MENTOHUST n
          set_config CONFIG_FIRMWARE_INCLUDE_SCUTCLIENT n
          set_config CONFIG_FIRMWARE_INCLUDE_SRELAY n
          set_config CONFIG_FIRMWARE_INCLUDE_NJIT_CLIENT n
          set_config CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE y
          set_config CONFIG_FIRMWARE_INCLUDE_ZEROTIER y
          set_config CONFIG_FIRMWARE_INCLUDE_FRPC y
          set_config CONFIG_FIRMWARE_INCLUDE_ALIDDNS y
          set_config CONFIG_FIRMWARE_INCLUDE_TRANSMISSION n
          set_config CONFIG_FIRMWARE_INCLUDE_ARIA n
          set_config CONFIG_FIRMWARE_INCLUDE_SHADOWSOCKS n
          set_config CONFIG_FIRMWARE_INCLUDE_V2RAY n
          set_config CONFIG_FIRMWARE_INCLUDE_XRAY n
          set_config CONFIG_FIRMWARE_INCLUDE_TROJAN n
          echo "--- Firmware Configuration Complete ---"
          EOF
          chmod +x .github/scripts/configure_firmware.sh

      # 注意：我们不再缓存 toolchain 目录，因为它被安装到了根目录 /toolchain-3.4.x
      # 我们只缓存 apt 包来加速
      - name: Cache APT packages
        id: cache-apt
        uses: actions/cache@v4
        with:
          path: /var/cache/apt/archives
          key: ${{ runner.os }}-apt-packages-${{ hashFiles('**/build.yml') }} # key 变动时会重新缓存

      - name: Install dependencies
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          sudo apt-get -y install \
            unzip libtool-bin curl cmake gperf gawk flex bison nano xxd \
            fakeroot cpio git python3-docutils gettext automake autopoint \
            texinfo build-essential help2man pkg-config zlib1g-dev \
            libgmp3-dev libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev wget

      - name: Clone Padavan source code
        run: |
          git clone --depth=1 -b $REPO_BRANCH $REPO_URL $FIRMWARE_PATH

      - name: Download MIPS toolchain
        working-directory: ./${{ env.FIRMWARE_PATH }}/toolchain-mipsel
        run: |
          # 修正: 必须使用 sudo 来允许脚本在根目录创建 /toolchain-3.4.x
          sudo ./dl_toolchain.sh

      - name: Build Firmware
        working-directory: ./${{ env.FIRMWARE_PATH }}/trunk
        run: |
          if [ ! -f "configs/templates/${CONFIG_TARGET}.config" ]; then
            echo "Error: Template configs/templates/${CONFIG_TARGET}.config not found!"
            exit 1
          fi
          cp -f "configs/templates/${CONFIG_TARGET}.config" .config
          ../../.github/scripts/configure_firmware.sh .config
          # 修正: 编译脚本需要 sudo 权限
          sudo ./clear_tree
          sudo ./build_firmware_modify $CONFIG_TARGET 0

      - name: Prepare artifact for upload
        run: |
          mkdir -p artifacts
          # 文件路径现在在工作目录下的 rt-n56u/trunk/images/
          cp ./${{ env.FIRMWARE_PATH }}/trunk/images/*.trx artifacts/
          cd artifacts
          mv *.trx "Padavan_${CONFIG_TARGET}_$(date +"%Y%m%d").trx"

      - name: Upload firmware artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Padavan-Firmware-${{ env.CONFIG_TARGET }}
          path: artifacts
